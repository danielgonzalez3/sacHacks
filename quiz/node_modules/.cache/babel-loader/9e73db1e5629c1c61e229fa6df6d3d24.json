{"ast":null,"code":"exports.getTriviaCategoryID = function (category, maxCategory) {\n  if (parseInt(category) >= 9 && parseInt(category) <= maxCategory) {\n    return category;\n  }\n\n  switch (category) {\n    case 'any':\n      return '';\n\n    case 'general':\n      return 9;\n\n    case 'books':\n      return 10;\n\n    case 'film':\n      return 11;\n\n    case 'music':\n      return 12;\n\n    case 'theatre':\n      return 13;\n\n    case 'television':\n      return 14;\n\n    case 'videogames':\n      return 15;\n\n    case 'boardgames':\n      return 16;\n\n    case 'science':\n      return 17;\n\n    case 'computers':\n      return 18;\n\n    case 'mathematics':\n    case 'math':\n      return 19;\n\n    case 'mythology':\n      return 20;\n\n    case 'sports':\n      return 21;\n\n    case 'geography':\n      return 22;\n\n    case 'history':\n      return 23;\n\n    case 'politics':\n      return 24;\n\n    case 'art':\n      return 25;\n\n    case 'celebrities':\n      return 26;\n\n    case 'animals':\n      return 27;\n\n    case 'vehicles':\n      return 28;\n\n    case 'comics':\n      return 29;\n\n    case 'gadgets':\n      return 30;\n\n    case 'anime':\n      return 31;\n\n    case 'cartoons':\n      return 32;\n\n    default:\n      throw new Error('Cannot find specified category');\n  }\n};\n\nexports.getTriviaType = function (type) {\n  switch (type) {\n    case 'any':\n      return '';\n\n    case 'choice':\n    case 'multiple':\n      return 'multiple';\n\n    case 'truefalse':\n    case 'boolean':\n      return 'boolean';\n\n    default:\n      throw new Error(type + ' is not a valid type. Type must either be multiple (multiple choice), or boolean (true/false)');\n  }\n};\n\nexports.getTriviaDifficulty = function (difficulty) {\n  switch (difficulty) {\n    case 'any':\n      return '';\n\n    case 'easy':\n      return 'easy';\n\n    case 'medium':\n      return 'medium';\n\n    case 'hard':\n      return 'hard';\n\n    default:\n      throw new Error(difficulty + ' is not a valid difficulty. Difficulty must either be easy, medium, or hard');\n  }\n};\n\nexports.getTriviaAmount = function (amount) {\n  if (typeof amount !== 'number' || amount < 1 || amount > 50) {\n    throw new Error('Amount must be a value between 1 and 50');\n  } else {\n    return amount;\n  }\n};\n\nexports.getTriviaReponseError = function (code) {\n  switch (code) {\n    case 1:\n      return \"The API doesn't have enough questions for your query.\";\n\n    case 2:\n      return \"Invalid parameter(s). Arguments passed aren't valid.\";\n\n    case 3:\n      return \"Invalid session token.\";\n\n    case 4:\n      return \"Session token has retrieved all possible questions for the specified query. Reset the token.\";\n\n    default:\n      return \"An error has occured in the API\";\n  }\n};","map":{"version":3,"sources":["/home/asura1/fake/quiz-app/final/node_modules/opentdb-api/methods.js"],"names":["exports","getTriviaCategoryID","category","maxCategory","parseInt","Error","getTriviaType","type","getTriviaDifficulty","difficulty","getTriviaAmount","amount","getTriviaReponseError","code"],"mappings":"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","sourcesContent":["exports.getTriviaCategoryID = function(category, maxCategory){\r\n    if(parseInt(category) >= 9 && parseInt(category) <= maxCategory){\r\n        return category;\r\n    }\r\n\r\n    switch(category){\r\n        case 'any': return '';\r\n        case 'general': return 9;\r\n        case 'books': return 10;\r\n        case 'film': return 11;\r\n        case 'music': return 12;\r\n        case 'theatre': return 13;\r\n        case 'television': return 14;\r\n        case 'videogames': return 15;\r\n        case 'boardgames': return 16;\r\n        case 'science': return 17;\r\n        case 'computers': return 18;\r\n        case 'mathematics':\r\n        case 'math': return 19;\r\n        case 'mythology': return 20;\r\n        case 'sports': return 21;\r\n        case 'geography': return 22;\r\n        case 'history': return 23;\r\n        case 'politics': return 24;\r\n        case 'art': return 25;\r\n        case 'celebrities': return 26;\r\n        case 'animals': return 27;\r\n        case 'vehicles': return 28;\r\n        case 'comics': return 29;\r\n        case 'gadgets': return 30;\r\n        case 'anime': return 31;\r\n        case 'cartoons': return 32;\r\n        \r\n        default: throw new Error('Cannot find specified category');\r\n    }\r\n}\r\n\r\nexports.getTriviaType = function(type){\r\n    switch(type){\r\n        case 'any': return '';\r\n        case 'choice':\r\n        case 'multiple': return 'multiple';\r\n        case 'truefalse':\r\n        case 'boolean': return 'boolean';\r\n        \r\n        default: throw new Error(type + ' is not a valid type. Type must either be multiple (multiple choice), or boolean (true/false)');\r\n    }\r\n}\r\n\r\nexports.getTriviaDifficulty = function(difficulty){\r\n    switch(difficulty){\r\n        case 'any': return '';\r\n        case 'easy': return 'easy';\r\n        case 'medium': return 'medium';\r\n        case 'hard': return 'hard';\r\n        \r\n        default: throw new Error(difficulty + ' is not a valid difficulty. Difficulty must either be easy, medium, or hard');\r\n    }\r\n}\r\n\r\nexports.getTriviaAmount = function(amount){\r\n    if(typeof amount !== 'number' || amount < 1 || amount > 50){\r\n        throw new Error('Amount must be a value between 1 and 50');\r\n    }\r\n    else{\r\n        return amount;\r\n    }\r\n}\r\n\r\nexports.getTriviaReponseError = function(code){\r\n    switch(code){\r\n        case 1: return \"The API doesn't have enough questions for your query.\";\r\n        case 2: return \"Invalid parameter(s). Arguments passed aren't valid.\";\r\n        case 3: return \"Invalid session token.\";\r\n        case 4: return \"Session token has retrieved all possible questions for the specified query. Reset the token.\";\r\n\r\n        default: return \"An error has occured in the API\";\r\n    }\r\n}"]},"metadata":{},"sourceType":"script"}